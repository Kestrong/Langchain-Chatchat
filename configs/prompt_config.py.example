# prompt模板使用Jinja2语法，简单点就是用双大括号代替f-string的单大括号
# 本配置文件支持热加载，修改prompt模板后无需重启服务。

# LLM对话支持的变量：
#   - input: 用户输入内容

# 知识库和搜索引擎对话支持的变量：
#   - context: 从检索结果拼接的知识文本
#   - question: 用户提出的问题

# Agent对话支持的变量：

#   - tools: 可用的工具列表
#   - tool_names: 可用的工具名称列表
#   - history: 用户和Agent的对话历史
#   - input: 用户输入内容
#   - agent_scratchpad: Agent的思维记录

PROMPT_TEMPLATES = {
    "llm_chat": {
        "default":
            '{{ input }}',

        "with_history":
            'The following is a friendly conversation between a human and an Assistant. '
            'The Assistant is talkative and provides lots of specific details from its context. '
            'If the Assistant does not know the answer to a question, it truthfully says it does not know.\n\n'
            'Current conversation:\n'
            '{{ history }}\n'
            'Human: {{ input }}\n'
            'Assistant:',

        "py":
            '你是一个聪明的代码助手，请你给我写出简单的py代码。 \n'
            '{{ input }}',
    },

    "completion": {
        "default":
            '请根据上下文内容输出下文. \n'
            'Human: {{ input }}\n'
            'AI:',

        "py":
            '你是一个聪明的代码助手，请你给我写出简单的py代码。 \n'
            '{{ input }}',
    },

    "knowledge_base_chat": {
        "default":
            '【指令】请仔细阅读提供的文档片段，理解这些文档的内容，然后结合你已有的知识专业的回答问题，不允许在答案中添加编造成分，答案请使用中文。'
            '【文档】{{ context }}\n'
            '【问题】{{ question }}\n',

        "empty":  # 搜不到知识库的时候使用
            '请你回答我的问题:\n'
            '{{ question }}\n\n',
    },

    "search_engine_chat": {
        "default":
            '【指令】请仔细阅读提供的文档片段，理解这些文档的内容，然后结合你已有的知识专业的回答问题，不允许在答案中添加编造成分，答案请使用中文。'
            '【文档】{{ context }}\n'
            '【问题】{{ question }}\n',

        "empty":  # 搜不到知识库的时候使用
            '请你回答我的问题:\n'
            '{{ question }}\n\n',
    },

    "agent_chat": {
        "default":
            'You can answer using the tools, or answer directly using your knowledge without using the tools. '
            'Respond to the human as helpfully and accurately as possible.\n'
            'You have access to the following tools:\n'
            '{{ tools }}\n'
            'Use a json blob to specify a tool by providing an action key (tool name) '
            'and an action_input key (tool input).\n'
            'Valid "action" values: "Final Answer" or one of [{{ tool_names }}]'
            'Provide only ONE action per $JSON_BLOB, as shown:\n\n'
            '```\n'
            '{\n'
            '  "action": $TOOL_NAME,\n'
            '  "action_input": $INPUT\n'
            '}\n'
            '```\n\n'
            'Follow this format:\n\n'
            'Question: input question to answer\n'
            'Thought: consider previous and subsequent steps\n'
            'Action:\n'
            '```\n'
            '$JSON_BLOB\n'
            '```\n'
            'Observation: action result\n'
            '... (repeat Thought/Action/Observation N times)\n'
            'Thought: I know what to respond\n'
            'Action:\n'
            '```\n'
            '{\n'
            '  "action": "Final Answer",\n'
            '  "action_input": "Final response to human, please in Chinese"\n'
            '}\n'
            '```\n'
            'Begin! Reminder to ALWAYS respond with a valid json blob of a single action. Use tools if necessary. '
            'Respond directly if appropriate. Format is Action:```$JSON_BLOB```then Observation:.\n'
            'Question: {{ input }}\n\n'
            'Thought: {{ agent_scratchpad }}',
    }
}
